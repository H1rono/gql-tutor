package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"

	"github.com/h1rono/gql-tutor/internal/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	todo := &model.Todo{
		ID:   "1", // This should be replaced with a real ID generation logic
		Text: input.Text,
		Done: false, // Default value for new todos
		User: &model.User{
			ID:   input.UserID,
			Name: "User Name", // This should be replaced with a real user fetching logic
		},
	}
	return todo, nil
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	todos := []*model.Todo{
		{
			ID:   "1",
			Text: "First Todo",
			Done: false,
			User: &model.User{
				ID:   "1",
				Name: "John Doe",
			},
		},
		{
			ID:   "2",
			Text: "Second Todo",
			Done: true,
			User: &model.User{
				ID:   "2",
				Name: "Jane Smith",
			},
		},
	}
	return todos, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
